{"name":"Qt 5.9.2","version":"5.9.2-0-201710050726","tests":[{"name":"QTBUG-49370 - Use Singleton object from other Singleton object within the same package will hang","pass":false,"reason":"Target executable: qtbug-49370\nInfo: creating stash file /home/travis/build/benlau/qtreleasetests/build/.qmake.stash\nCompiling...\nBuild Completed\nStart watchdog\nTimeout. Watchdog kill current process\n/home/travis/build/benlau/qtreleasetests/qtci/bin/run-unittests: line 65:  4711 Killed                  ./$TARGET\n"},{"name":"QTBUG-56935  QQmlEngine crashing when trying to clear the component cache ","pass":false,"reason":"Target executable: qtbug-56935\nInfo: creating stash file /home/travis/build/benlau/qtreleasetests/build/.qmake.stash\nCompiling...\nBuild Completed\nThis plugin does not support createPlatformOpenGLContext!\nFailed to create OpenGL context for format QSurfaceFormat(version 2.0, options QFlags<QSurfaceFormat::FormatOption>(), depthBufferSize 24, redBufferSize -1, greenBufferSize -1, blueBufferSize -1, alphaBufferSize -1, stencilBufferSize 8, samples -1, swapBehavior QSurfaceFormat::SwapBehavior(DoubleBuffer), swapInterval 1, profile  QSurfaceFormat::OpenGLContextProfile(NoProfile)) \n/home/travis/build/benlau/qtreleasetests/qtci/bin/run-unittests: line 65:  4793 Aborted                 (core dumped) ./$TARGET\n"},{"name":"QTBUG-57545 The result of Array.sort() is incorrect if shift() was called","pass":false,"reason":"Target executable: tst_qtbug57545test\nInfo: creating stash file /home/travis/build/benlau/qtreleasetests/build/.qmake.stash\nCompiling...\nBuild Completed\n********* Start testing of example *********\nConfig: Using QtTest library 5.9.2, Qt 5.9.2 (x86_64-little_endian-lp64 shared (dynamic) release build; by GCC 5.3.1 20160406 (Red Hat 5.3.1-6))\nPASS   : example::Array::initTestCase()\nFAIL!  : example::Array::test_condition1() Compared values are not the same\n   Actual   (): [3,1]\n   Expected (): [1,3]\n   Loc: [/home/travis/build/benlau/qtreleasetests/qtbug-57545/tst_Array.qml(11)]\nFAIL!  : example::Array::test_condition2() Compared values are not the same\n   Actual   (): [2,3]\n   Expected (): [1,3]\n   Loc: [/home/travis/build/benlau/qtreleasetests/qtbug-57545/tst_Array.qml(18)]\nPASS   : example::Array::cleanupTestCase()\nTotals: 2 passed, 2 failed, 0 skipped, 0 blacklisted, 4ms\n********* Finished testing of example *********\n"},{"name":"QTBUG-57640 - Crash on loading Javascript file","pass":true},{"name":"QTBUG-62666- JS  operator leads to segfaults on garbage collecton","pass":false,"reason":"Target executable: qtbug-62666\nInfo: creating stash file /home/travis/build/benlau/qtreleasetests/build/.qmake.stash\nCompiling...\nBuild Completed\n********* Start testing of example *********\nConfig: Using QtTest library 5.9.2, Qt 5.9.2 (x86_64-little_endian-lp64 shared (dynamic) release build; by GCC 5.3.1 20160406 (Red Hat 5.3.1-6))\nPASS   : example::QtBug62666::initTestCase()\nQDEBUG : example::QtBug62666::test_case1() qml: case1\n/home/travis/build/benlau/qtreleasetests/qtci/bin/run-unittests: line 65:  4922 Segmentation fault      (core dumped) ./$TARGET\n"},{"name":"QRedux","pass":true},{"name":"AsyncFuture","pass":true},{"name":"QuickFlux","pass":true},{"name":"SparkQML","pass":false,"reason":"INFO: Package com.github.benlau.quickpromise has a different license (APACHE_2_0) than it's dependant (NONE).\nINFO: Package com.github.benlau.quickflux has a different license (APACHE_2_0) than it's dependant (NONE).\nINFO: Package com.github.benlau.quickcross has a different license (APACHE_2_0) than it's dependant (NONE).\nINFO: Package com.github.benlau.testable has a different license (APACHE_2_0) than it's dependant (NONE).\nINFO: Package com.github.benlau.qsyncable has a different license (APACHE_2_0) than it's dependant (NONE).\nINFO: Package com.github.benlau.qtshell has a different license (MIT) than it's dependant (NONE).\nINFO: Package com.github.benlau.qtshell has a different license (MIT) than it's dependant (NONE).\nINFO: Package quick.future.pri has a different license (APACHE_2_0) than it's dependant (NONE).\nINFO: Package font.awesome.pri has a different license (APACHE_2_0) than it's dependant (NONE).\nINFO: Package com.github.benlau.qredux has a different license (APACHE_2_0) than it's dependant (NONE).\nINFO: Package async.future.pri has a different license (APACHE_2_0) than it's dependant (NONE).\nINFO: Package net.efever.aconcurrent has a different license (APACHE_2_0) than it's dependant (NONE).\nINFO: Package net.efever.viewstack has a different license (APACHE_2_0) than it's dependant (NONE).\nINFO: Package net.efever.snapshottesting has a different license (APACHE_2_0) than it's dependant (NONE).\nInstalling com.github.benlau.quickpromise@1.0.3\nInstalling com.github.benlau.quickflux@1.0.5.4\nInstalling com.github.benlau.quickcross@1.0.2.20\nInstalling com.github.benlau.testable@1.0.2.15\nInstalling com.github.benlau.qsyncable@1.0.2.4\nInstalling com.github.benlau.qtshell@0.4.4\nInstalling com.github.benlau.qtshell@0.4.3\nInstalling quick.future.pri@1.0.0.0\nInstalling font.awesome.pri@1.0.0\nInstalling com.github.benlau.qredux@0.0.1\nInstalling async.future.pri@0.3.6.4\nInstalling net.efever.aconcurrent@0.1.13\nInstalling net.efever.viewstack@0.0.1\nInstalling net.efever.snapshottesting@0.0.15\nQPM: 2017/11/09 02:46:43 WARNING: com.github.benlau.qtshell@0.4.4 is already a dependency. Replacing with version 0.4.3.\nTarget executable: sparkqmltests\nInfo: creating stash file /home/travis/build/benlau/qtreleasetests/build/.qmake.stash\nProject MESSAGE: This project is using private headers and will therefore be tied to this specific Qt module build version.\nProject MESSAGE: Running this project against other versions of the Qt modules may crash at any arbitrary point.\nProject MESSAGE: This is not a bug, but a result of using Qt internals. You have been warned!\nCompiling...\nIn file included from ../Qt/5.9.2/gcc_64/include/QtCore/QtCore:4:0,\n                 from ../Qt/5.9.2/gcc_64/include/QtTest/QtTestDepends:3,\n                 from ../Qt/5.9.2/gcc_64/include/QtTest/QtTest:3,\n                 from ../sparkqml/tests/sparkqmltests/privateapitests.cpp:1:\n../sparkqml/tests/sparkqmltests/privateapitests.cpp: In member function void PrivateApiTests::test_QQmlMetaType():\n../Qt/5.9.2/gcc_64/include/QtCore/qglobal.h:982:34: error: cannot convert const QQmlType to const QQmlType* in initialization\n     for (variable = *_container_.i; _container_.control; _container_.control = 0)\n                                  ^\n../Qt/5.9.2/gcc_64/include/QtCore/qglobal.h:990:21: note: in expansion of macro Q_FOREACH\n #    define foreach Q_FOREACH\n                     ^\n../sparkqml/tests/sparkqmltests/privateapitests.cpp:24:5: note: in expansion of macro foreach\n     foreach (const QQmlType *ty, QQmlMetaType::qmlTypes()) {\n     ^\nmake: *** [privateapitests.o] Error 1\n"},{"name":"Library - SnapshotTesting","pass":false,"reason":"INFO: Package com.github.benlau.testable has a different license (APACHE_2_0) than it's dependant (NONE).\nINFO: Package com.github.benlau.qtshell has a different license (MIT) than it's dependant (NONE).\nINFO: Package async.future.pri has a different license (APACHE_2_0) than it's dependant (NONE).\nINFO: Package net.efever.aconcurrent has a different license (APACHE_2_0) than it's dependant (NONE).\nInstalling com.github.benlau.testable@1.0.2.21\nInstalling com.github.benlau.qtshell@0.4.4\nInstalling async.future.pri@0.3.6.4\nInstalling net.efever.aconcurrent@0.1.13\nTarget executable: snapshottesting\nInfo: creating stash file /home/travis/build/benlau/qtreleasetests/build/.qmake.stash\nProject MESSAGE: This project is using private headers and will therefore be tied to this specific Qt module build version.\nProject MESSAGE: Running this project against other versions of the Qt modules may crash at any arbitrary point.\nProject MESSAGE: This is not a bug, but a result of using Qt internals. You have been warned!\nCompiling...\n../snapshottesting/snapshottesting.cpp: In function const QQmlType* findQmlType(const QMetaObject*, bool):\n../snapshottesting/snapshottesting.cpp:110:15: error: no match for operator= (operand types are QList<QQmlType*> and QList<QQmlType>)\n         types = QQmlMetaType::qmlAllTypes();\n               ^\n../snapshottesting/snapshottesting.cpp:110:15: note: candidates are:\nIn file included from ../Qt/5.9.2/gcc_64/include/QtCore/qhash.h:46:0,\n                 from ../Qt/5.9.2/gcc_64/include/QtCore/qdebug.h:45,\n                 from ../Qt/5.9.2/gcc_64/include/QtCore/QDebug:1,\n                 from ../snapshottesting/snapshottesting.cpp:1:\n../Qt/5.9.2/gcc_64/include/QtCore/qlist.h:500:29: note: QList<T>& QList<T>::operator=(const QList<T>&) [with T = QQmlType*]\n Q_INLINE_TEMPLATE QList<T> &QList<T>::operator=(const QList<T> &l)\n                             ^\n../Qt/5.9.2/gcc_64/include/QtCore/qlist.h:500:29: note:   no known conversion for argument 1 from QList<QQmlType> to const QList<QQmlType*>&\n../Qt/5.9.2/gcc_64/include/QtCore/qlist.h:158:19: note: QList<T>& QList<T>::operator=(QList<T>&&) [with T = QQmlType*]\n     inline QList &operator=(QList<T> &&other) Q_DECL_NOTHROW\n                   ^\n../Qt/5.9.2/gcc_64/include/QtCore/qlist.h:158:19: note:   no known conversion for argument 1 from QList<QQmlType> to QList<QQmlType*>&&\n../snapshottesting/snapshottesting.cpp:112:15: error: no match for operator= (operand types are QList<QQmlType*> and QList<QQmlType>)\n         types = QQmlMetaType::qmlTypes();\n               ^\n../snapshottesting/snapshottesting.cpp:112:15: note: candidates are:\nIn file included from ../Qt/5.9.2/gcc_64/include/QtCore/qhash.h:46:0,\n                 from ../Qt/5.9.2/gcc_64/include/QtCore/qdebug.h:45,\n                 from ../Qt/5.9.2/gcc_64/include/QtCore/QDebug:1,\n                 from ../snapshottesting/snapshottesting.cpp:1:\n../Qt/5.9.2/gcc_64/include/QtCore/qlist.h:500:29: note: QList<T>& QList<T>::operator=(const QList<T>&) [with T = QQmlType*]\n Q_INLINE_TEMPLATE QList<T> &QList<T>::operator=(const QList<T> &l)\n                             ^\n../Qt/5.9.2/gcc_64/include/QtCore/qlist.h:500:29: note:   no known conversion for argument 1 from QList<QQmlType> to const QList<QQmlType*>&\n../Qt/5.9.2/gcc_64/include/QtCore/qlist.h:158:19: note: QList<T>& QList<T>::operator=(QList<T>&&) [with T = QQmlType*]\n     inline QList &operator=(QList<T> &&other) Q_DECL_NOTHROW\n                   ^\n../Qt/5.9.2/gcc_64/include/QtCore/qlist.h:158:19: note:   no known conversion for argument 1 from QList<QQmlType> to QList<QQmlType*>&&\nIn file included from ../Qt/5.9.2/gcc_64/include/QtCore/qalgorithms.h:43:0,\n                 from ../Qt/5.9.2/gcc_64/include/QtCore/qdebug.h:44,\n                 from ../Qt/5.9.2/gcc_64/include/QtCore/QDebug:1,\n                 from ../snapshottesting/snapshottesting.cpp:1:\n../snapshottesting/snapshottesting.cpp: In function bool isPublicComponent(const QMetaObject*):\n../Qt/5.9.2/gcc_64/include/QtCore/qglobal.h:982:34: error: cannot convert const QQmlType to const QQmlType* in initialization\n     for (variable = *_container_.i; _container_.control; _container_.control = 0)\n                                  ^\n../Qt/5.9.2/gcc_64/include/QtCore/qglobal.h:990:21: note: in expansion of macro Q_FOREACH\n #    define foreach Q_FOREACH\n                     ^\n../snapshottesting/snapshottesting.cpp:129:5: note: in expansion of macro foreach\n     foreach (const QQmlType *ty, QQmlMetaType::qmlTypes()) {\n     ^\n../snapshottesting/snapshottesting.cpp: In function QString SnapshotTesting::Private::classNameToComponentName(const QString&):\n../Qt/5.9.2/gcc_64/include/QtCore/qglobal.h:982:34: error: cannot convert const QQmlType to const QQmlType* in initialization\n     for (variable = *_container_.i; _container_.control; _container_.control = 0)\n                                  ^\n../Qt/5.9.2/gcc_64/include/QtCore/qglobal.h:990:21: note: in expansion of macro Q_FOREACH\n #    define foreach Q_FOREACH\n                     ^\n../snapshottesting/snapshottesting.cpp:159:5: note: in expansion of macro foreach\n     foreach (const QQmlType *ty, QQmlMetaType::qmlTypes()) {\n     ^\n../snapshottesting/snapshottesting.cpp: In function QString SnapshotTesting::Private::obtainQmlPackage(QObject*):\n../Qt/5.9.2/gcc_64/include/QtCore/qglobal.h:982:34: error: cannot convert const QQmlType to const QQmlType* in initialization\n     for (variable = *_container_.i; _container_.control; _container_.control = 0)\n                                  ^\n../Qt/5.9.2/gcc_64/include/QtCore/qglobal.h:990:21: note: in expansion of macro Q_FOREACH\n #    define foreach Q_FOREACH\n                     ^\n../snapshottesting/snapshottesting.cpp:1233:5: note: in expansion of macro foreach\n     foreach (const QQmlType *ty, QQmlMetaType::qmlAllTypes()) {\n     ^\nmake: *** [snapshottesting.o] Error 1\n"}]}