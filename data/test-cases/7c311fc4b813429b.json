{
  "uid" : "7c311fc4b813429b",
  "name" : "Library - SnapshotTesting",
  "fullName" : "Qt 5.9.2.Library - SnapshotTesting",
  "historyId" : "5bb52b228267fc5dc67245a3bddccecc",
  "time" : {
    "start" : 1544430429016,
    "stop" : 1544430429018,
    "duration" : 2
  },
  "description" : "",
  "descriptionHtml" : "",
  "status" : "failed",
  "statusMessage" : "INFO: Package com.github.benlau.testable has a different license (APACHE_2_0) than it's dependant (NONE).\n                INFO: Package com.github.benlau.qtshell has a different license (MIT) than it's dependant (NONE).\n                INFO: Package async.future.pri has a different license (APACHE_2_0) than it's dependant (NONE).\n                INFO: Package net.efever.aconcurrent has a different license (APACHE_2_0) than it's dependant (NONE).\n                Installing com.github.benlau.testable@1.0.2.21\n                Installing com.github.benlau.qtshell@0.4.4\n                Installing async.future.pri@0.3.6.4\n                Installing net.efever.aconcurrent@0.1.13\n                Target executable: snapshottesting\n                Info: creating stash file /home/travis/build/benlau/qtreleasetests/build/.qmake.stash\n                Project MESSAGE: This project is using private headers and will therefore be tied to this specific Qt module build version.\n                Project MESSAGE: Running this project against other versions of the Qt modules may crash at any arbitrary point.\n                Project MESSAGE: This is not a bug, but a result of using Qt internals. You have been warned!\n                Compiling...\n                ../snapshottesting/snapshottesting.cpp: In function const QQmlType* findQmlType(const QMetaObject*, bool):\n                ../snapshottesting/snapshottesting.cpp:110:15: error: no match for operator= (operand types are QList<QQmlType*> and QList<QQmlType>)\n                         types = QQmlMetaType::qmlAllTypes();\n                               ^\n                ../snapshottesting/snapshottesting.cpp:110:15: note: candidates are:\n                In file included from ../Qt/5.9.2/gcc_64/include/QtCore/qhash.h:46:0,\n                                 from ../Qt/5.9.2/gcc_64/include/QtCore/qdebug.h:45,\n                                 from ../Qt/5.9.2/gcc_64/include/QtCore/QDebug:1,\n                                 from ../snapshottesting/snapshottesting.cpp:1:\n                ../Qt/5.9.2/gcc_64/include/QtCore/qlist.h:500:29: note: QList<T>& QList<T>::operator=(const QList<T>&) [with T = QQmlType*]\n                 Q_INLINE_TEMPLATE QList<T> &QList<T>::operator=(const QList<T> &l)\n                                             ^\n                ../Qt/5.9.2/gcc_64/include/QtCore/qlist.h:500:29: note:   no known conversion for argument 1 from QList<QQmlType> to const QList<QQmlType*>&\n                ../Qt/5.9.2/gcc_64/include/QtCore/qlist.h:158:19: note: QList<T>& QList<T>::operator=(QList<T>&&) [with T = QQmlType*]\n                     inline QList &operator=(QList<T> &&other) Q_DECL_NOTHROW\n                                   ^\n                ../Qt/5.9.2/gcc_64/include/QtCore/qlist.h:158:19: note:   no known conversion for argument 1 from QList<QQmlType> to QList<QQmlType*>&&\n                ../snapshottesting/snapshottesting.cpp:112:15: error: no match for operator= (operand types are QList<QQmlType*> and QList<QQmlType>)\n                         types = QQmlMetaType::qmlTypes();\n                               ^\n                ../snapshottesting/snapshottesting.cpp:112:15: note: candidates are:\n                In file included from ../Qt/5.9.2/gcc_64/include/QtCore/qhash.h:46:0,\n                                 from ../Qt/5.9.2/gcc_64/include/QtCore/qdebug.h:45,\n                                 from ../Qt/5.9.2/gcc_64/include/QtCore/QDebug:1,\n                                 from ../snapshottesting/snapshottesting.cpp:1:\n                ../Qt/5.9.2/gcc_64/include/QtCore/qlist.h:500:29: note: QList<T>& QList<T>::operator=(const QList<T>&) [with T = QQmlType*]\n                 Q_INLINE_TEMPLATE QList<T> &QList<T>::operator=(const QList<T> &l)\n                                             ^\n                ../Qt/5.9.2/gcc_64/include/QtCore/qlist.h:500:29: note:   no known conversion for argument 1 from QList<QQmlType> to const QList<QQmlType*>&\n                ../Qt/5.9.2/gcc_64/include/QtCore/qlist.h:158:19: note: QList<T>& QList<T>::operator=(QList<T>&&) [with T = QQmlType*]\n                     inline QList &operator=(QList<T> &&other) Q_DECL_NOTHROW\n                                   ^\n                ../Qt/5.9.2/gcc_64/include/QtCore/qlist.h:158:19: note:   no known conversion for argument 1 from QList<QQmlType> to QList<QQmlType*>&&\n                In file included from ../Qt/5.9.2/gcc_64/include/QtCore/qalgorithms.h:43:0,\n                                 from ../Qt/5.9.2/gcc_64/include/QtCore/qdebug.h:44,\n                                 from ../Qt/5.9.2/gcc_64/include/QtCore/QDebug:1,\n                                 from ../snapshottesting/snapshottesting.cpp:1:\n                ../snapshottesting/snapshottesting.cpp: In function bool isPublicComponent(const QMetaObject*):\n                ../Qt/5.9.2/gcc_64/include/QtCore/qglobal.h:982:34: error: cannot convert const QQmlType to const QQmlType* in initialization\n                     for (variable = *_container_.i; _container_.control; _container_.control = 0)\n                                                  ^\n                ../Qt/5.9.2/gcc_64/include/QtCore/qglobal.h:990:21: note: in expansion of macro Q_FOREACH\n                 #    define foreach Q_FOREACH\n                                     ^\n                ../snapshottesting/snapshottesting.cpp:129:5: note: in expansion of macro foreach\n                     foreach (const QQmlType *ty, QQmlMetaType::qmlTypes()) {\n                     ^\n                ../snapshottesting/snapshottesting.cpp: In function QString SnapshotTesting::Private::classNameToComponentName(const QString&):\n                ../Qt/5.9.2/gcc_64/include/QtCore/qglobal.h:982:34: error: cannot convert const QQmlType to const QQmlType* in initialization\n                     for (variable = *_container_.i; _container_.control; _container_.control = 0)\n                                                  ^\n                ../Qt/5.9.2/gcc_64/include/QtCore/qglobal.h:990:21: note: in expansion of macro Q_FOREACH\n                 #    define foreach Q_FOREACH\n                                     ^\n                ../snapshottesting/snapshottesting.cpp:159:5: note: in expansion of macro foreach\n                     foreach (const QQmlType *ty, QQmlMetaType::qmlTypes()) {\n                     ^\n                ../snapshottesting/snapshottesting.cpp: In function QString SnapshotTesting::Private::obtainQmlPackage(QObject*):\n                ../Qt/5.9.2/gcc_64/include/QtCore/qglobal.h:982:34: error: cannot convert const QQmlType to const QQmlType* in initialization\n                     for (variable = *_container_.i; _container_.control; _container_.control = 0)\n                                                  ^\n                ../Qt/5.9.2/gcc_64/include/QtCore/qglobal.h:990:21: note: in expansion of macro Q_FOREACH\n                 #    define foreach Q_FOREACH\n                                     ^\n                ../snapshottesting/snapshottesting.cpp:1233:5: note: in expansion of macro foreach\n                     foreach (const QQmlType *ty, QQmlMetaType::qmlAllTypes()) {\n                     ^\n                make: *** [snapshottesting.o] Error 1\n                ",
  "statusTrace" : "AssertionError: INFO: Package com.github.benlau.testable has a different license (APACHE_2_0) than it's dependant (NONE).\n                INFO: Package com.github.benlau.qtshell has a different license (MIT) than it's dependant (NONE).\n                INFO: Package async.future.pri has a different license (APACHE_2_0) than it's dependant (NONE).\n                INFO: Package net.efever.aconcurrent has a different license (APACHE_2_0) than it's dependant (NONE).\n                Installing com.github.benlau.testable@1.0.2.21\n                Installing com.github.benlau.qtshell@0.4.4\n                Installing async.future.pri@0.3.6.4\n                Installing net.efever.aconcurrent@0.1.13\n                Target executable: snapshottesting\n                Info: creating stash file /home/travis/build/benlau/qtreleasetests/build/.qmake.stash\n                Project MESSAGE: This project is using private headers and will therefore be tied to this specific Qt module build version.\n                Project MESSAGE: Running this project against other versions of the Qt modules may crash at any arbitrary point.\n                Project MESSAGE: This is not a bug, but a result of using Qt internals. You have been warned!\n                Compiling...\n                ../snapshottesting/snapshottesting.cpp: In function const QQmlType* findQmlType(const QMetaObject*, bool):\n                ../snapshottesting/snapshottesting.cpp:110:15: error: no match for operator= (operand types are QList<QQmlType*> and QList<QQmlType>)\n                         types = QQmlMetaType::qmlAllTypes();\n                               ^\n                ../snapshottesting/snapshottesting.cpp:110:15: note: candidates are:\n                In file included from ../Qt/5.9.2/gcc_64/include/QtCore/qhash.h:46:0,\n                                 from ../Qt/5.9.2/gcc_64/include/QtCore/qdebug.h:45,\n                                 from ../Qt/5.9.2/gcc_64/include/QtCore/QDebug:1,\n                                 from ../snapshottesting/snapshottesting.cpp:1:\n                ../Qt/5.9.2/gcc_64/include/QtCore/qlist.h:500:29: note: QList<T>& QList<T>::operator=(const QList<T>&) [with T = QQmlType*]\n                 Q_INLINE_TEMPLATE QList<T> &QList<T>::operator=(const QList<T> &l)\n                                             ^\n                ../Qt/5.9.2/gcc_64/include/QtCore/qlist.h:500:29: note:   no known conversion for argument 1 from QList<QQmlType> to const QList<QQmlType*>&\n                ../Qt/5.9.2/gcc_64/include/QtCore/qlist.h:158:19: note: QList<T>& QList<T>::operator=(QList<T>&&) [with T = QQmlType*]\n                     inline QList &operator=(QList<T> &&other) Q_DECL_NOTHROW\n                                   ^\n                ../Qt/5.9.2/gcc_64/include/QtCore/qlist.h:158:19: note:   no known conversion for argument 1 from QList<QQmlType> to QList<QQmlType*>&&\n                ../snapshottesting/snapshottesting.cpp:112:15: error: no match for operator= (operand types are QList<QQmlType*> and QList<QQmlType>)\n                         types = QQmlMetaType::qmlTypes();\n                               ^\n                ../snapshottesting/snapshottesting.cpp:112:15: note: candidates are:\n                In file included from ../Qt/5.9.2/gcc_64/include/QtCore/qhash.h:46:0,\n                                 from ../Qt/5.9.2/gcc_64/include/QtCore/qdebug.h:45,\n                                 from ../Qt/5.9.2/gcc_64/include/QtCore/QDebug:1,\n                                 from ../snapshottesting/snapshottesting.cpp:1:\n                ../Qt/5.9.2/gcc_64/include/QtCore/qlist.h:500:29: note: QList<T>& QList<T>::operator=(const QList<T>&) [with T = QQmlType*]\n                 Q_INLINE_TEMPLATE QList<T> &QList<T>::operator=(const QList<T> &l)\n                                             ^\n                ../Qt/5.9.2/gcc_64/include/QtCore/qlist.h:500:29: note:   no known conversion for argument 1 from QList<QQmlType> to const QList<QQmlType*>&\n                ../Qt/5.9.2/gcc_64/include/QtCore/qlist.h:158:19: note: QList<T>& QList<T>::operator=(QList<T>&&) [with T = QQmlType*]\n                     inline QList &operator=(QList<T> &&other) Q_DECL_NOTHROW\n                                   ^\n                ../Qt/5.9.2/gcc_64/include/QtCore/qlist.h:158:19: note:   no known conversion for argument 1 from QList<QQmlType> to QList<QQmlType*>&&\n                In file included from ../Qt/5.9.2/gcc_64/include/QtCore/qalgorithms.h:43:0,\n                                 from ../Qt/5.9.2/gcc_64/include/QtCore/qdebug.h:44,\n                                 from ../Qt/5.9.2/gcc_64/include/QtCore/QDebug:1,\n                                 from ../snapshottesting/snapshottesting.cpp:1:\n                ../snapshottesting/snapshottesting.cpp: In function bool isPublicComponent(const QMetaObject*):\n                ../Qt/5.9.2/gcc_64/include/QtCore/qglobal.h:982:34: error: cannot convert const QQmlType to const QQmlType* in initialization\n                     for (variable = *_container_.i; _container_.control; _container_.control = 0)\n                                                  ^\n                ../Qt/5.9.2/gcc_64/include/QtCore/qglobal.h:990:21: note: in expansion of macro Q_FOREACH\n                 #    define foreach Q_FOREACH\n                                     ^\n                ../snapshottesting/snapshottesting.cpp:129:5: note: in expansion of macro foreach\n                     foreach (const QQmlType *ty, QQmlMetaType::qmlTypes()) {\n                     ^\n                ../snapshottesting/snapshottesting.cpp: In function QString SnapshotTesting::Private::classNameToComponentName(const QString&):\n                ../Qt/5.9.2/gcc_64/include/QtCore/qglobal.h:982:34: error: cannot convert const QQmlType to const QQmlType* in initialization\n                     for (variable = *_container_.i; _container_.control; _container_.control = 0)\n                                                  ^\n                ../Qt/5.9.2/gcc_64/include/QtCore/qglobal.h:990:21: note: in expansion of macro Q_FOREACH\n                 #    define foreach Q_FOREACH\n                                     ^\n                ../snapshottesting/snapshottesting.cpp:159:5: note: in expansion of macro foreach\n                     foreach (const QQmlType *ty, QQmlMetaType::qmlTypes()) {\n                     ^\n                ../snapshottesting/snapshottesting.cpp: In function QString SnapshotTesting::Private::obtainQmlPackage(QObject*):\n                ../Qt/5.9.2/gcc_64/include/QtCore/qglobal.h:982:34: error: cannot convert const QQmlType to const QQmlType* in initialization\n                     for (variable = *_container_.i; _container_.control; _container_.control = 0)\n                                                  ^\n                ../Qt/5.9.2/gcc_64/include/QtCore/qglobal.h:990:21: note: in expansion of macro Q_FOREACH\n                 #    define foreach Q_FOREACH\n                                     ^\n                ../snapshottesting/snapshottesting.cpp:1233:5: note: in expansion of macro foreach\n                     foreach (const QQmlType *ty, QQmlMetaType::qmlAllTypes()) {\n                     ^\n                make: *** [snapshottesting.o] Error 1\n                \n                    at Context.<anonymous> (runner.js:22:36)",
  "flaky" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "Qt 5.9.2"
  }, {
    "name" : "testClass",
    "value" : "Qt 5.9.2"
  }, {
    "name" : "testMethod",
    "value" : "Library - SnapshotTesting"
  }, {
    "name" : "package",
    "value" : "Qt 5.9.2"
  }, {
    "name" : "resultFormat",
    "value" : "allure1"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "7c311fc4b813429b.json",
  "parameterValues" : [ ]
}